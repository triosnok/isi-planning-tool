name: Deploy application

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  continuous_integration:
    name: CI
    uses: ./.github/workflows/ci.yml

  publish_init:
    name: Publish init artifact
    needs: [continuous_integration]
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Set up gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & publish docker image
        run: ./gradlew :apps:init:jib

  publish_backend:
    name: Publish backend artifact
    needs: [continuous_integration]
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Set up gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & publish docker image
        run: ./gradlew :apps:backend:jib

  publish_frontend:
    name: Publish frontend artifact
    needs: [continuous_integration]
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/triosnok/isi-planning-tool-frontend:latest
            ghcr.io/triosnok/isi-planning-tool-frontend:${{ github.ref_name }}

  deploy_demo:
    name: Deploy demo environment
    runs-on: ubuntu-latest
    needs: [publish_init, publish_backend, publish_frontend]
    environment: demo
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4

      - name: Set k8s context
        uses: azure/k8s-set-context@v4
        with:
          method: service-account
          k8s-url: ${{ vars.K8S_URL }}
          k8s-secret: ${{ secrets.K8S_SECRET }}

      - name: Set up helm
        uses: azure/setup-helm@v4

      - name: Deploy Helm chart
        shell: bash
        run: |
          helm upgrade isi-planning-tool ./infrastructure/helm \
            --kube-insecure-skip-tls-verify \
            --install \
            --namespace ${{ vars.K8S_NAMESPACE }} \
            --set version=${{ github.ref_name }} \
            --set hostname=${{ vars.HOSTNAME }} \
            --set mail.enabled=${{ vars.MAIL_ENABLED }} \
            --set mail.host=${{ vars.MAIL_HOST }} \
            --set mail.senderAddress=${{ vars.MAIL_SENDER_ADDRESS }} \
            --set mail.username=${{ secrets.MAIL_USERNAME }} \
            --set mail.password=${{ secrets.MAIL_PASSWORD }} \
            --set clusterIssuer=letsencrypt
