plugins {
  id 'java-conventions'
  alias libs.plugins.spring.boot
  alias libs.plugins.spring.dependencies
  alias libs.plugins.jib
}

dependencies {
  implementation project(':packages:client')
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'
  implementation 'org.hibernate:hibernate-spatial:6.4.1.Final'
  implementation 'org.locationtech.jts:jts:1.19.0'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv'
  implementation 'io.minio:minio:8.5.9'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly project(':apps:init')
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'org.postgresql:postgresql'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:postgresql'
  testImplementation 'org.testcontainers:minio'
  testRuntimeOnly project(':apps:init')
  testCompileOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
  useJUnitPlatform()
}

jib {
  from {
    image = 'eclipse-temurin:21-jre'
  }

  to {
    image = 'ghcr.io/triosnok/isi-planning-tool-backend'
    tags = ['latest', version]
  }

  container {
    labels = [
      'org.opencontainers.image.source': 'https://github.com/triosnok/isi-planning-tool',
      'org.opencontainers.image.description': 'Backend container image for isi-planning-tool'
    ]
  }
}
